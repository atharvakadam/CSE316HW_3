{"ast":null,"code":"var _jsxFileName = \"/Users/atharva/Desktop/todo_hw3/src/components/list_screen/ItemsList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport ItemCard from './ItemCard';\nimport { firestoreConnect } from 'react-redux-firebase';\n\nvar img1 = require('../../images/icons/AddItem.png');\n\nvar counter = 0;\n\nclass ItemsList extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.addItem = () => {\n      var newItem = {\n        assigned_to: 'Unknown',\n        completed: true,\n        description: \"Unknown\",\n        due_date: \"2019-08-30\",\n        key: counter\n      };\n      counter = counter + 1;\n      console.log(this.props.firestore.collection(this.props.todoList.id));\n      this.props.firestore.collection(this.props.todoList.id).add(newItem);\n    };\n  }\n\n  render() {\n    const todoList = this.props.todoList;\n    const items = todoList.items;\n    console.log(\"ItemsList: todoList.id \" + todoList.id);\n    return React.createElement(\"div\", {\n      className: \"todo-lists section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, items && items.map(function (item) {\n      item.id = item.key;\n      return React.createElement(ItemCard, {\n        todoList: todoList,\n        item: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    }), React.createElement(\"div\", {\n      className: \"center\",\n      onClick: this.addItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: img1,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const todoList = ownProps.todoList;\n  return {\n    todoList,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'todoLists'\n}]))(ItemsList);","map":{"version":3,"sources":["/Users/atharva/Desktop/todo_hw3/src/components/list_screen/ItemsList.js"],"names":["React","connect","compose","ItemCard","firestoreConnect","img1","require","counter","ItemsList","Component","addItem","newItem","assigned_to","completed","description","due_date","key","console","log","props","firestore","collection","todoList","id","add","render","items","map","item","mapStateToProps","state","ownProps","auth","firebase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,gCAAD,CAAlB;;AACA,IAAIC,OAAO,GAAG,CAAd;;AAEA,MAAMC,SAAN,SAAwBR,KAAK,CAACS,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAEpCC,OAFoC,GAE1B,MAAM;AACZ,UAAIC,OAAO,GAAG;AACVC,QAAAA,WAAW,EAAC,SADF;AAEVC,QAAAA,SAAS,EAAC,IAFA;AAGVC,QAAAA,WAAW,EAAC,SAHF;AAIVC,QAAAA,QAAQ,EAAE,YAJA;AAKVC,QAAAA,GAAG,EAACT;AALM,OAAd;AAOAA,MAAAA,OAAO,GAAGA,OAAO,GAAG,CAApB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,UAArB,CAAgC,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,EAApD,CAAZ;AACA,WAAKJ,KAAL,CAAWC,SAAX,CAAqBC,UAArB,CAAgC,KAAKF,KAAL,CAAWG,QAAX,CAAoBC,EAApD,EAAwDC,GAAxD,CAA4Db,OAA5D;AACH,KAbmC;AAAA;;AAepCc,EAAAA,MAAM,GAAG;AACL,UAAMH,QAAQ,GAAG,KAAKH,KAAL,CAAWG,QAA5B;AACA,UAAMI,KAAK,GAAGJ,QAAQ,CAACI,KAAvB;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BI,QAAQ,CAACC,EAAjD;AACA,WACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKG,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAU,UAASC,IAAT,EAAe;AAC/BA,MAAAA,IAAI,CAACL,EAAL,GAAUK,IAAI,CAACZ,GAAf;AACA,aACI,oBAAC,QAAD;AAAU,QAAA,QAAQ,EAAEM,QAApB;AAA8B,QAAA,IAAI,EAAEM,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAEG,KAJG,CADd,EAOI;AAAK,MAAA,SAAS,EAAG,QAAjB;AAA0B,MAAA,OAAO,EAAE,KAAKlB,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,GAAG,EAAEL,IAAV;AAAgB,MAAA,GAAG,EAAC,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAPJ,CADJ;AAcH;;AAjCmC;;AAoCxC,MAAMwB,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC,QAAMT,QAAQ,GAAGS,QAAQ,CAACT,QAA1B;AACA,SAAO;AACHA,IAAAA,QADG;AAEHU,IAAAA,IAAI,EAAEF,KAAK,CAACG,QAAN,CAAeD;AAFlB,GAAP;AAIH,CAND;;AAQA,eAAe9B,OAAO,CAClBD,OAAO,CAAC4B,eAAD,CADW,EAElBzB,gBAAgB,CAAC,CACb;AAAEiB,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAFE,CAAP,CAKbb,SALa,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport ItemCard from './ItemCard';\nimport { firestoreConnect } from 'react-redux-firebase';\n\nvar img1 = require('../../images/icons/AddItem.png');\nvar counter = 0\n\nclass ItemsList extends React.Component {\n\n    addItem = () => {\n        var newItem = {\n            assigned_to:'Unknown',\n            completed:true,\n            description:\"Unknown\",\n            due_date: \"2019-08-30\",\n            key:counter\n        }\n        counter = counter + 1\n        console.log(this.props.firestore.collection(this.props.todoList.id));\n        this.props.firestore.collection(this.props.todoList.id).add(newItem);\n    }\n\n    render() {\n        const todoList = this.props.todoList;\n        const items = todoList.items;\n        console.log(\"ItemsList: todoList.id \" + todoList.id);\n        return (\n            <div className=\"todo-lists section\">\n                {items && items.map(function(item) {\n                    item.id = item.key;\n                    return (\n                        <ItemCard todoList={todoList} item={item} />\n                    );})\n                }\n                <div className = \"center\" onClick={this.addItem}>\n                <img src={img1} alt=\"\"></img>\n                </div>    \n            </div>\n            \n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    const todoList = ownProps.todoList;\n    return {\n        todoList,\n        auth: state.firebase.auth,\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'todoLists' },\n    ]),\n)(ItemsList);"]},"metadata":{},"sourceType":"module"}